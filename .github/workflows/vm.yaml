name: VM-sandbox-test
# tested with v1 vagrant snapshot 

on:
  pull_request:
  push:
    branches: [ "main" ]

jobs:
  build-kernel:
    runs-on: self-hosted
    steps:
      - name: VM Startup and Check
        run: |
          cd ..
          echo 'Restoring clean VM image..."
          vagrant snapshot restore clean_vm_v1
          vagrant ssh -c "echo 'Fresh VM, hello world!'"
          vagrant ssh -c 'uname -r'
      - name: Checkout kernel source
        run: |
          cd ..
          echo 'Preparing Linux repo...'
          rm -rf linux
          mkdir -p linux
          cd linux
          git init
          git remote add origin https://git.kernel.org/pub/scm/linux/kernel/git/song/md.git
          # just a random hash for quick repo population, get this from PR
          git fetch origin --depth=5 36a5c03f232719eb4e2d925f4d584e09cfaf372c
          git reset --hard 36a5c03f232719eb4e2d925f4d584e09cfaf372c
          git log -1
      - name: Build kernel
        run: |
          cd ../linux
          echo 'Compile Linux on bare metal...'
          cp /boot/config-`uname -r`* .config
          yes "" | make oldconfig
          make bzImage -j32
          make modules -j32
          cd ..
          echo 'Install kernel in VM...'
          vagrant ssh -c 'cd host/linux && ls -al && sudo make modules_install -j32'
          vagrant ssh -c 'cd host/linux && ls -al && sudo make install -j32'
          vagrant ssh -c "sudo grubby --info ALL"
          vagrant ssh -c "sudo grubby --set-default-index=2"
          vagrant ssh -c "sudo grubby --info ALL"
          uname -r
      - name: VM Reboot and version check
        run: |
          echo 'Reboot done, fire up VM and check uname'
          vagrant reload
          vagrant ssh -c "echo 'Reboot done, hello world!'"
          vagrant ssh -c 'uname -r'
      # TODO:  add testing steps
      - name: All done, cleanup
        run: |          
          cd ..
          ls -al
          vagrant halt
