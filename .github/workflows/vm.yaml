name: sandbox-per-patch
# tested with v1 vagrant snapshot...

on:
  pull_request:
  push:
    branches: [ "main" ]
    
env:
    PR_INFO: "prinfo.txt"
    BUILD_OUT: "build.txt"
    WRONG_REPO: "mdadm.txt"
    TEST1_FAIL: "test1.txt"
     
jobs:
  per-patch-testing:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - name: Get user's e-mail
        run: |
          mail_attach=()
          echo "Pull request author: ${{ github.event.pull_request.user.login }}" > $PR_INFO
          echo "Pull request title: ${{ github.event.pull_request.title }}" >> $PR_INFO
          echo "Pull request body: ${{ github.event.pull_request.body }}" >> $PR_INFO
          echo "Pull request author: ${{ github.event.pull_request.user.login }}"
          echo "Pull request title: ${{ github.event.pull_request.title }}"
          echo "Pull request body: ${{ github.event.pull_request.body }}"
          mail_attach+=($PR_INFO)
          cat $PR_INFO
          echo "USER_EMAIL=$(git log -n 1 --pretty=format:%ae)" >> $GITHUB_ENV 
          # for now add the sender email to the SUBJECT as I'm sending to myself while debugging
          echo "SUBJECT=Github Actions job FAILURE for $(git log -n 1 --pretty=format:%ae)" >> $GITHUB_ENV
        # TODO:  remove next line, here for testing only as push of yaml won't work without it
        continue-on-error: true 
      - name: Filter mis-routed mdadm patches
        run: |
          if [[ "${{ github.event.pull_request.title }}" == *"mdadm"* ]]; then
            echo "MDADM='Patch likely meant for mdadm repo, aborting'" >> $GITHUB_ENV
            exit 1
          fi
      - name: Build the project
        id: build
        run: |
          make > $BUILD_OUT 2>&1
          echo "Build SUCCESS" 
          cat $BUILD_OUT
      - name: Failure information
        if: failure()
        run: |
         if [[ -n "${{ env.MDADM }}" ]]; then
            echo "${{ env.MDADM }}" > $WRONG_REPO
            mail_attach+=($WRONG_REPO)
            cat $WRONG_REPO
         else
            echo "Build FAILURE"
            mail_attach+=($BUILD_OUT)
            cat $BUILD_OUT
         fi
         pwd
         ls -al
         IFS=',' # make the list comma separated for the mailer
         echo "ATTACHMENTS=${mail_attach[*]}" >> $GITHUB_ENV
         echo "Raw list: ${mail_attach[*]}"
         echo "The list: ${{ env.ATTACHMENTS }}"
      - name: Send build fail mail
        if: failure()
        uses: peluse/action-send-mail@v1.2 # from dawidd6/action-send-mail@v3.12.0
        with:
          server_address: smtp.gmail.com
          server_port: 465
          ignore_cert: true
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSKEY }}
          subject: ${{ env.SUBJECT }} 
          to: paul.e.luse@intel.com
          #${{ env.USER_EMAIL }}
          from: md-raid-ci
          body: Build job of ${{ github.repository }} completed with failure! See attachments.
          attachments: ${{ env.ATTACHMENTS }} 
          reply_to: paul.e.luse@intel.com
      - name: final stuff
        run: |
          echo "Build worked, no email sent"
