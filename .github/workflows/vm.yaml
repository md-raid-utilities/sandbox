name: sandbox-per-patch
# tested with v1 vagrant snapshot..

on:
  pull_request:
  push:
    branches: [ "main" ]
     
jobs:
  per-patch-testing:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Get commit message
        run: |
          # Fetch the list of commits for the PR
          PR_COMMITS=$(gh pr view ${{ github.event.pull_request.number }} --json commits -q ".commits[].oid")
          
          # Print the commit messages
          for COMMIT in $PR_COMMITS; do
            git log -1 --format=%B $COMMIT
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Filter mis-routed mdadm patches
        run: |
          echo "now pr title"
          echo "Pull request title: ${{ github.event.pull_request.title }}"

          echo "Pull request sender.id: ${{ github.event.sender.id }}"
          echo "Pull request sender.login: ${{ github.event.sender.login }}"
          sender="${{ github.event.sender.id }}"
          login="${{ github.event.sender.login }}"
          domain="users.noreply.github.com"
          email="$sender+$login@$domain"
          echo $login
          echo $domain
          echo $email
          echo "USER_EMAIL=$email" >> $GITHUB_ENV 
          echo "USER_EMAIL"
          echo "${{ env.USER_EMAIL }}"
          echo "USER_EMAIL"

      
          #echo "SUBJECT=$(git show -s --pretty=%s ${{ github.event.pull_request.head.sha }})" >> $GITHUB_ENV 
          echo "SUBJECT=${{ github.event.pull_request.title }}" >> $GITHUB_ENV
          echo "${{ env.SUBJECT }}"
          if [[ "${{ github.event.pull_request.titleT }}" == *"mdadm"* ]]; then
            echo "String found"
            exit 0
          else
            echo "String not found"
          fi
      - name: Build the project
        id: build
        run: |
          make > out.txt 2>&1
          echo "Build SUCCESS" 
          cat out.txt
      - name: Handle build failure
        if: failure()
        run: |
          echo "Build FAILED" 
          cat out.txt
          echo "USER_EMAIL=$(git show -s --pretty=%ae ${{ github.event.pull_request.head.sha }}))" >> $GITHUB_ENV 
      #- uses: actions/setup-node@v3
      #  with:
      #    node-version: 20.13.1
      #- name: Install Dependencies
      #  run: |
      #    npm install @actions/github
      #    npm install @actions/core
      #- uses: actions/upload-artifact@v4
      #  with:
      #    name: my_artifact
      #    path: artifact.txt
      - name: Send build fail mail
        if: failure()
        uses: peluse/action-send-mail@v1.0 # xx dawidd6/action-send-mail@v3.12.0
        with:
          #github_token: ${{secrets.GITHUB_TOKEN}}
          server_address: smtp.gmail.com
          server_port: 465
          ignore_cert: true
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSKEY}}
          subject: Github Actions job FAILURE
          to: ${{ env.USER_EMAIL }}
          #paul.e.luse@intel.com
          #${{steps.build.outputs.author}}
          from: md-raid-ci
          body: Build job of ${{github.repository}} completed with failure! See attachment.
          attachments: out.txt
          reply_to: paul.e.luse@intel.com
      - name: final stuff
        run: |
          echo "Build worked, no email"
