name: VM-sandbox-test
# tested with v1 vagrant snapshot 

on:
  pull_request:
  push:
    branches: [ "main" ]

jobs:
  build-kernel:
    runs-on: inspur7
    steps:
      - name: VM Startup and Check
        run: |
          cd ..
          echo "***************************"
          echo "Restoring clean VM image..."
          echo "***************************"
          vagrant snapshot restore clean_vm_v1
          vagrant ssh -c "sudo systemctl restart chronyd && sudo chronyc -a makestep"
          vagrant ssh -c "echo 'Fresh VM, hello world!'"
          vagrant ssh -c "sudo date"
          vagrant ssh -c "uname -r"
      - name: Checkout kernel source
        run: |
          cd ..
          echo "***********************"
          echo "Preparing Linux repo..."
          echo "***********************"
          rm -rf linux
          mkdir -p linux
          # strip.sh removes kernel options we don't care about
          cp strip.sh linux
          cd linux
          git init
          git remote add origin https://git.kernel.org/pub/scm/linux/kernel/git/song/md.git
          # just a random hash for quick repo population, get this from PR
          git fetch origin --depth=5 36a5c03f232719eb4e2d925f4d584e09cfaf372c
          git reset --hard 36a5c03f232719eb4e2d925f4d584e09cfaf372c
          git log -1
      - name: Configure kernel
        run: |
          cd ../linux
          echo "********************************"
          echo "Prepare minimal .config on VM..."
          echo "********************************"
          vagrant ssh -c "cp /boot/config-`uname -r`* host/linux/.config"
          # TODO: WIP on exlcuding stuff
          vagrant ssh -c "cd host/linux && yes '' | make oldconfig"
          echo "Set CONFIG_VIRTUALIZATION=N"
          vagrant ssh -c "cd host/linux && ls -al"
          vagrant ssh -c "cd host/linux && ./strip.sh"
          #vagrant ssh -c "cd host/linux && gawk -i inplace '{gsub(/CONFIG_VIRTUALIZATION=y/, "CONFIG_VIRTUALIZATION=n")} 1' .config"
      - name: Build kernel
        run: |
          cd ../linux
          echo "******************************"
          echo "Compile Linux on bare metal..."
          echo "******************************"
          make bzImage -j32
          make modules -j32
          cd ..
          echo "***********************"
          echo "Install kernel in VM..."
          echo "***********************"
          vagrant ssh -c 'cd host/linux && sudo make modules_install -j32'
          vagrant ssh -c 'cd host/linux && sudo make install -j32'
          # our VM clean image only has one index so 1 is always correct
          vagrant ssh -c "sudo grubby --set-default-index=1"
          vagrant ssh -c "sudo grubby --info ALL"
          uname -r
      - name: VM Reboot and version check
        run: |
          echo "***************************************"
          echo 'Reboot done, fire up VM and check uname'
          echo "***************************************"
          vagrant reload
          vagrant ssh -c "echo 'Reboot done, hello world!'"
          vagrant ssh -c 'uname -r'
      # TODO:  add testing steps
      - name: All done, cleanup
        run: |          
          cd ..
          echo "Poweroff VM..."
          vagrant halt
